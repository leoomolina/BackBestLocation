{
  "swagger": "2.0",
  "info": {
    "description": "",
    "version": "1.0.0",
    "title": "BestLocation.API",
    "contact": {
      "email": "leomolina0501@hotmail.com"
    }
  },
  "host": "bestlocationapi.herokuapp.com",
  "tags": [
    {
      "name": "Imovel",
      "description": "Operações sobre Imóveis"
    },
    {
      "name": "User",
      "description": "Operações sobre Usuários"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "paths": {
    "/api/imovel/buscar/{idImovel}/{idUsuario}": {
      "get": {
        "tags": [
          "Imovel"
        ],
        "summary": "Listar todos imóveis de um usuário",
        "description": "",
        "operationId": "getImoveis",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "idUsuario",
            "in": "path",
            "description": "ID do usuário a ser consultado",
            "required": true,
            "type": "ObjectId"
          },
          {
            "name": "idImovel",
            "in": "path",
            "description": "",
            "required": true,
            "type": "ObjectId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "$ref": "#/definitions/Imovel"
            }
          },
          "400": {
            "description": "Invalid tag value",
            "schema": {
              "type": "object",
              "items": {
                "statusCode": 400,
                "success": false,
                "message": "Invalid"
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/imovel/usuario/{idUsuario}": {
      "get": {
        "tags": [
          "Imovel"
        ],
        "summary": "Finds imoveis by usuário",
        "description": "Multiple status values can be provided with comma separated strings",
        "operationId": "findPetsByStatus",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "idUsuario",
            "in": "path",
            "description": "ID do usuário a ser consultado",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Imovel"
              }
            }
          },
          "400": {
            "description": "Invalid "
          }
        },
        "security": []
      },
      "post": {
        "tags": [
          "Imovel"
        ],
        "summary": "Add a new imovel to the store",
        "description": "",
        "operationId": "newImovel",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "idUsuario",
            "in": "path",
            "description": "ID do usuário a ser consultado",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Imovel object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Pet"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
        "security": []
      }
    },
    "/api/imovel/usuario/{idUsuario}/{idImovel}": {
      "put": {
        "tags": [
          "Imovel"
        ],
        "summary": "Update an existing imovel",
        "description": "",
        "operationId": "updatePet",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "idUsuario",
            "in": "path",
            "description": "ID do usuário a ser consultado",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "idImovel",
            "in": "path",
            "description": "ID do imóvel a ser atualizado",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Imovel object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Pet"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Imovel not found"
          },
          "405": {
            "description": "Validation exception"
          }
        },
        "security": []
      },
      "delete": {
        "tags": [
          "Imovel"
        ],
        "summary": "Deletes a imovel",
        "description": "",
        "operationId": "deleteImovel",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "idUsuario",
            "in": "path",
            "description": "ID do usuário a ser consultado",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "idImovel",
            "in": "path",
            "description": "ID do imóvel a ser atualizado",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "api_key",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "petId",
            "in": "path",
            "description": "Imovel id to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Imovel not found"
          }
        },
        "security": []
      }
    },
    "/api/imovel/admin/{idImovel}": {
      "delete": {
        "tags": [
          "Imovel"
        ],
        "summary": "Deletes a imóvel",
        "description": "",
        "operationId": "deleteImovelAdmin",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "idImovel",
            "in": "path",
            "description": "ID do imóvel a ser atualizado",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "api_key",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Imovel not found"
          }
        },
        "security": []
      }
    },
    "/api/imovel/favoritos/{idUsuario}/{idImovel}": {
      "get": {
        "tags": [
          "Imovel"
        ],
        "summary": "Find imovel by ID",
        "description": "Retorna imóveis favoritos de um usuário",
        "operationId": "getImoveisFavorito",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "idUsuario",
            "in": "path",
            "description": "ID do usuário a ser consultado",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "idImovel",
            "in": "path",
            "description": "ID do imóvel a ser atualizado",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Pet"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Imovel not found"
          }
        },
        "security": []
      },
      "put": {
        "tags": [
          "Imovel"
        ],
        "summary": "Favorite imovel",
        "description": "",
        "operationId": "favoriteImovel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "idUsuario",
            "in": "path",
            "description": "ID do usuário a ser consultado",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "idImovel",
            "in": "path",
            "description": "ID do imóvel a ser atualizado",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid user supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/imovel/searchimovel/": {
      "get": {
        "tags": [
          "Imovel"
        ],
        "summary": "Find pet by ID",
        "description": "Returns a single pet",
        "operationId": "getPetById",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Pet"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Imovel not found"
          }
        },
        "security": [],
        "deprecated": true
      }
    },
    "/api/users/crud/": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get all users",
        "description": "",
        "operationId": "allUsers",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              },
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              }
            }
          },
          "400": {
            "description": "Invalid username/password supplied"
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create user",
        "description": "This can only be done by the logged in user.",
        "operationId": "newUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/api/users/crud/{user_id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Find user by ID",
        "description": "",
        "operationId": "detailsUser",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "ID do usuário a ser consultado",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Pet"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": []
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Deletes a user",
        "description": "",
        "operationId": "deleteUser",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "ID do usuário a ser consultado",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Imovel not found"
          }
        },
        "security": []
      }
    },
    "/user/logout": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Logs out current logged in user session",
        "description": "",
        "operationId": "logoutUser",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "user_auth": {
      "type": "oauth2",
      "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
      "flow": "implicit",
      "scopes": {
        "write:pets": "modify pets in your account",
        "read:pets": "read your pets"
      }
    },
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "definitions": {
    "Imovel": {
      "type": "object",
      "required": [
        "titulo",
        "tipoImovel",
        "endereco",
        "numEndereco",
        "usuarioId"
      ],
      "properties": {
        "_id": {
          "type": "ObjectId",
          "example": "0ab12cd3e456789012fg3h45"
        },
        "titulo": {
          "type": "String",
          "example":"Descricao Título"
        },
        "tipoImovel": {
          "type": "String",
          "example":"Casa"
        },
        "status": {
          "type": "String",
          "example":"Venda"
        },
        "numQuartos": {
          "type": "integer",
          "default": 0
        },
        "numVagasGaragem": {
          "type": "integer",
          "default": 0
        },
        "numBanheiros": {
          "type": "integer",
          "default": 0
        },
        "descricao": {
          "type": "String",
          "example": "Casa ao lado do shopping"
        },
        "valorImovel": {
          "type": "integer",
          "default": 0.00
        },
        "valorIptu": {
          "type": "integer",
          "default": 0.00
        },
        "area": {
          "type": "integer",
          "default": 0.00
        },
        "cep": {
          "type": "String",
          "example":"17123-45"
        },
        "endereco": {
          "type": "String",
          "example":"Rua Teste"
        },
        "numEndereco": {
          "type": "String",
          "example": "123A"
        },
        "complementoEndereco": {
          "type": "String",
          "example": "Bloco 1"
        },
        "bairro": {
          "type": "String",
          "example": "Parque dos Testes"
        },
        "cidade": {
          "type": "String",
          "example": "Testolândia"
        },
        "uf": {
          "type": "String",
          "example": "SP"
        },
        "areaServico": {
          "type": "Boolean",
          "default": false,
          "example": false
        },
        "arCondicionado": {
          "type": "Boolean",
          "default": false,
          "example": false
        },
        "churrasqueira": {
          "type": "Boolean",
          "default": false,
          "example": false
        },
        "piscina": {
          "type": "Boolean",
          "default": false,
          "example": false
        },
        "varanda": {
          "type": "Boolean",
          "default": false,
          "example": false
        },
        "mobiliado": {
          "type": "Boolean",
          "default": false,
          "example": false
        },
        "armariosCozinha": {
          "type": "Boolean",
          "default": false,
          "example": false
        },
        "armariosQuarto": {
          "type": "Boolean",
          "default": false,
          "example": false
        },
        "quartoServico": {
          "type": "Boolean",
          "default": false,
          "example": false
        },
        "emCondominio": {
          "type": "Boolean",
          "default": false,
          "example": false
        },
        "images": [
          {
            "properties": {
              "type": "String",
              "trim": true,
              "example": ""
            }
          }
        ],
        "detalhesCondominio": {
          "properties": {
            "valorCondominio": {
              "type": "integer",
              "default": 0.00
            },
            "fechado": {
              "type": "Boolean",
              "default": false,
              "example": false
            },
            "seg24hrs": {
              "type": "Boolean",
              "default": false,
              "example": false
            },
            "podeAnimal": {
              "type": "Boolean",
              "default": false,
              "example": false
            },
            "piscina": {
              "type": "Boolean",
              "default": false,
              "example": false
            },
            "academia": {
              "type": "Boolean",
              "default": false,
              "example": false
            },
            "portaoEletrico": {
              "type": "Boolean",
              "default": false,
              "example": false
            }
          }
        },
        "usuarioId": {
          "type": "ObjectId",
          "ref": "User",
          "example": "0ab12cd3e456789012fg3h45"
        },
        "createdAt": {
          "type": "Date",
          "example": "0000-00-00T00:00:0.000Z"
        },
        "updatedAt": {
          "type": "Date",
          "example": "0000-00-00T00:00:0.000Z"
        }
      }
    },
    "User": {
      "type": "object",
      "required": [
        "firstName",
        "cpf",
        "tipo",
        "email",
        "password"
      ],
      "properties": {
        "_id": {
          "type": "ObjectId",
          "example": "0ab12cd3e456789012fg3h45"
        },
        "firstName": {
          "type": "String",
          "trim": true,
          "example":"Asdrubal"
        },
        "lastName": {
          "type": "String",
          "trim": true,
          "example":"da Silva"
        },
        "cpf": {
          "type": "String",
          "unique": true,
          "trim": true
        },
        "tipo": {
          "type": "String",
          "trim": true,
          "example":"comprador"
        },
        "dtNascimento": {
          "type": "Date",
          "trim": true,
          "example":"0000-00-00T00:00:0.000Z"
        },
        "sexo": {
          "type": "String",
          "trim": true,
          "example":"masculino"
        },
        "telefone": {
          "type": "String",
          "trim": true,
          "example":"11 1234-5678"
        },
        "email": {
          "type": "String",
          "trim": true,
          "unique": true,
          "lowercase": true,
          "example":"asdrubal@dominio.com"
        },
        "password": {
          "type": "String",
          "example":"abcdef"
        },
        "isAdmin": {
          "type": "Boolean",
          "default": false,
          "example": false
        },
        "imoveisFavorites": {
          "properties": {
            "userId": {
              "type": "ObjectId",
              "ref": "Imovel",
              "example": "0ab12cd3e456789012fg3h45"
            }
          }
        },
        "passResetKey": {
          "type": "String",
          "example":"abcdef"
        },
        "passKeyExpires": {
          "type": "integer",
          "example": ""
        },
        "createdAt": {
          "type": "Date",
          "example": "0000-00-00T00:00:0.000Z"
        },
        "updateAt": {
          "type": "Date",
          "example": "0000-00-00T00:00:0.000Z"
        }
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}